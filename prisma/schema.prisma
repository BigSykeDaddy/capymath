generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid())
  email         String    @unique
  name          String?
  role          Role      @default(child)
  parentId      String?
  parent        User?     @relation("ParentChildren", fields: [parentId], references: [id])
  children      User[]    @relation("ParentChildren")
  attempts      Attempt[]
  accounts      Account[] @relation("UserAccounts")
  sessions      Session[] @relation("UserSessions")
  createdAt     DateTime  @default(now())
  passwordHash  String?
}

model Attempt {
  id          Int       @id @default(autoincrement())
  user        User      @relation(fields: [userId], references: [id])
  userId      String
  problem     String
  correct     Boolean
  timeMs      Int
  attemptedAt DateTime  @default(now())
}

enum Role {
  parent
  child
}

model Account {
  id                 String   @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?

  user               User     @relation("UserAccounts", fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user         User     @relation("UserSessions", fields: [userId], references: [id])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
